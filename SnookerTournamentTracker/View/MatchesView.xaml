<Window x:Class="SnookerTournamentTracker.View.MatchesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SnookerTournamentTracker.View"
        xmlns:converter="clr-namespace:SnookerTournamentTracker.Converter"
        mc:Ignorable="d"
        Title="MatchesView" Height="450" Width="800">

    <Window.Resources>
        <converter:EntriesToStringConverter x:Key="entriesToStringConverter" />
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <converter:NegativeBoolToVisibilityConverter x:Key="negativeBoolToVisibilityConverter" />
    </Window.Resources>


    <StackPanel>
        <ComboBox IsEditable="False" ItemsSource="{Binding Rounds}" SelectedItem="{Binding SelectedRound}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <Label Content="{Binding Round}" />
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <ListBox ItemsSource="{Binding Matches}" SelectedItem="{Binding SelectedMatch}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <Label Content="{Binding MatchNumber}" ContentStringFormat="Match #{0}" />
                        <Label Content="{Binding Entries, Converter={StaticResource entriesToStringConverter}}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label Content="{Binding Players}" HorizontalContentAlignment="Center" />
        <Label Content="{Binding Score}" HorizontalContentAlignment="Center" />
        <Label Content="{Binding TotalFrames}" ContentStringFormat="Best of {0}" HorizontalContentAlignment="Center" />
        <DataGrid AutoGenerateColumns="False" SelectionMode="Single" 
                  ItemsSource="{Binding Results, Mode=OneTime}"
                  CanUserAddRows="False" CanUserDeleteRows="False"
                  CanUserReorderColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="50+" Binding="{Binding FirstPlayerBrakes}" />

                <DataGridTextColumn Header="Score" Binding="{Binding FirstPlayerScore, UpdateSourceTrigger=PropertyChanged}" />

                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" Visibility="{Binding IsUnsaved,Converter={StaticResource negativeBoolToVisibilityConverter}}">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} : {1}">
                                        <Binding Path="FirstPlayerMatchScore" />
                                        <Binding Path="SecondPlayerMatchScore" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Score" Binding="{Binding SecondPlayerScore, UpdateSourceTrigger=PropertyChanged}" />

                <DataGridTextColumn Header="50+" Binding="{Binding SecondPlayerBrakes}" />
                
                <DataGridTemplateColumn Visibility="{Binding IsEditable, Converter={StaticResource boolToVisibilityConverter}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Save" 
                                    Visibility="{Binding IsUnsaved,Converter={StaticResource boolToVisibilityConverter}}"
                                    Command="{Binding DataContext.SaveBtnCmd, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                    ClickMode="Press" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>
        <Label Content="{Binding Error}" />
    </StackPanel>
</Window>
