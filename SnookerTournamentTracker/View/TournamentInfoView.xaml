<Window x:Class="SnookerTournamentTracker.View.TournamentInfoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SnookerTournamentTracker.View"
        xmlns:converter="clr-namespace:SnookerTournamentTracker.Converter"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="Tournament Info" Height="750" Width="1200" MinHeight="750" MinWidth="900" 
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <converter:PersonToStringConverter x:Key="personToStringConverter" />
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <converter:NegativeBoolToVisibilityConverter x:Key="negativeBoolToVisibilityConverter" />
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <GroupBox 
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Visibility="{Binding IsPaid, Converter={StaticResource negativeBoolToVisibilityConverter}}"
                    Header="{Binding Tournament.Name}">

                    <StackPanel HorizontalAlignment="Stretch">
                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Tournament name"
                            Text="{Binding Tournament.Name, Mode=OneWay}" 
                            IsReadOnly="True" />

                        <TextBox
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Status" 
                            Text="{Binding Tournament.Status, Mode=OneWay}"
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Starts"
                            Text="{Binding Tournament.StartDate, Mode=OneWay}" IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Ends"
                            Text="{Binding Tournament.EndDate, Mode=OneWay}" 
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Buy-in"
                            Text="{Binding Tournament.BuyIn, Mode=OneWay, StringFormat={}{0:0.00}}"
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Garantee"
                            Text="{Binding Tournament.Garantee, Mode=OneWay, StringFormat={}{0:0.00}}" 
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Registration status"
                            Text="{Binding Status, Mode=OneWay}" 
                            IsReadOnly="True" />

                    </StackPanel>
                </GroupBox>

            </Grid>

            <StackPanel Grid.Column="0" Visibility="{Binding IsPaid, Converter={StaticResource boolToVisibilityConverter}}">
                <GroupBox 
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Header="{Binding Tournament.Name}">

                    <StackPanel>
                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Tournament name"
                            Text="{Binding Tournament.Name, Mode=OneWay}" 
                            IsReadOnly="True" />

                        <TextBox
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Status" 
                            Text="{Binding TournamentStatus, Mode=OneWay}"
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Starts"
                            Text="{Binding Tournament.StartDate, Mode=OneWay}" IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Ends"
                            Text="{Binding Tournament.EndDate, Mode=OneWay}" 
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Buy-in"
                            Text="{Binding Tournament.BuyIn, Mode=OneTime, StringFormat={}{0:0.00}}"
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Garantee"
                            Text="{Binding Tournament.Garantee, Mode=OneTime, StringFormat={}{0:0.00}}" 
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Registration status"
                            Text="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            IsReadOnly="True" />

                    </StackPanel>
                </GroupBox>

                <GroupBox 
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Header="Payment info"
                    Visibility="{Binding IsPaid, Converter={StaticResource boolToVisibilityConverter}}">

                    <StackPanel>
                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Card number"
                            Text="{Binding Tournament.PaymentInfo.Card.CardNumber, Mode=OneTime}" 
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Card owner"
                            Text="{Binding Tournament.PaymentInfo.Card.Name, Mode=OneTime}" 
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Sum"
                            Text="{Binding Tournament.PaymentInfo.Sum, Mode=OneTime, StringFormat={}{0:0.00}}"
                            IsReadOnly="True" />

                        <TextBox 
                            Margin="5 1"
                            materialDesign:HintAssist.Hint="Purpose of payment"
                            IsReadOnly="True"
                            TextWrapping="Wrap"
                            VerticalAlignment="Stretch"
                            AcceptsReturn="True"
                            VerticalScrollBarVisibility="Auto"
                            SpellCheck.IsEnabled="True">
                            <MultiBinding StringFormat="Buy-in to tournament #{0}, user #{1}">
                                <Binding Path="Tournament.Id" />
                                <Binding Path="User.Id" />
                            </MultiBinding>
                        </TextBox>
                    </StackPanel>
                </GroupBox>
            </StackPanel>


            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Header="Prizes">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBox 
                            Grid.Row="0"
                            materialDesign:HintAssist.Hint="Prize mode"
                            Text="{Binding Tournament.PrizeMode, Mode=OneTime}" 
                            IsReadOnly="True" />

                        <DataGrid Grid.Row="1"
                                AutoGenerateColumns="False" ItemsSource="{Binding Prizes}" 
                                CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True"
                                ColumnWidth="*">
                            
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Place" Width="2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding Path=PlaceName,UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Amount" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding PrizeAmount, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>

                <GroupBox Grid.Row="1"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Header="Rounds">

                    <DataGrid Grid.Row="1" 
                              AutoGenerateColumns="False" ItemsSource="{Binding RoundModel}"
                              CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" ColumnWidth="*">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Round" Width="2*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Round, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Frames" Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Frames, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>

            <Grid Grid.Column="2"  Visibility="{Binding IsConfirmPossible, Converter={StaticResource negativeBoolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Header="Players">

                    <DataGrid
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Players}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          IsReadOnly="True" ColumnWidth="*">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Player" Width="2*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Player, Converter={StaticResource personToStringConverter}}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Result" Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Result}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>

            <Grid Grid.Column="2"  Visibility="{Binding IsConfirmPossible, Converter={StaticResource boolToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Header="Players">

                    <DataGrid
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding Players}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          IsReadOnly="True" ColumnWidth="*">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Player" Width="2*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Player, Converter={StaticResource personToStringConverter}}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Result" Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Result}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>

                <GroupBox Grid.Row="1"
                    materialDesign:ShadowAssist.ShadowDepth="Depth3"
                    materialDesign:ColorZoneAssist.Mode="Custom"
                    materialDesign:ColorZoneAssist.Background="{StaticResource BackgroundColorDarkBrush}"
                    materialDesign:ColorZoneAssist.Foreground="{StaticResource LightTextBrush}"
                    Visibility="{Binding IsConfirmPossible, Converter={StaticResource boolToVisibilityConverter}}"
                    Header="Waiting players">

                    <DataGrid 
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding WaitingPlayers}"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Result" Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding Player, Converter={StaticResource personToStringConverter}}" BorderThickness="0" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Confirm" 
                                            Command="{Binding DataContext.ConfirmCmd, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                            ClickMode="Press" CommandParameter="{Binding}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                </GroupBox>
            </Grid>
        </Grid>
        
        <StackPanel Grid.Column="1">
            <Button 
                Margin="10 20 10 2"
                Width="{StaticResource ButtonWidth}"
                Content="Register" 
                Command="{Binding RegisterCmd}" 
                Visibility="{Binding IsRegistrationOpened, Converter={StaticResource boolToVisibilityConverter}}" />
            
            <Button 
                Margin="10 2"
                Width="{StaticResource ButtonWidth}"
                Content="Unregister" Command="{Binding UnregisterCmd}" 
                Visibility="{Binding IsRegistrationOpened, Converter={StaticResource boolToVisibilityConverter}}" />
            
            <Button 
                Margin="10 2"
                Width="{StaticResource ButtonWidth}"
                Content="View matches" Click="ViewMatchesBtn_Click" 
                Visibility="{Binding IsMatchesEnabled, Converter={StaticResource boolToVisibilityConverter}}" />
            
            <Button 
                Margin="10 2"
                Width="{StaticResource ButtonWidth}"
                Content="Edit" 
                Visibility="{Binding IsEditable, Converter={StaticResource boolToVisibilityConverter}}"
                Click="EditBtn_Click" />
            
            <Button 
                Margin="10 2"
                Width="{StaticResource ButtonWidth}"
                Content="Close registration"
                Visibility="{Binding IsClosingRegistrationPossible, Converter={StaticResource boolToVisibilityConverter}}"
                Command="{Binding CloseRegistrationCmd}" />

            <Button 
                Margin="10 2"
                Width="{StaticResource ButtonWidth}"
                Content="Cancel tournament"
                Visibility="{Binding IsClosingRegistrationPossible, Converter={StaticResource boolToVisibilityConverter}}"
                Command="{Binding CancelTournamentCmd}" />

            <Button 
                Margin="10 2"
                Width="{StaticResource ButtonWidth}"
                Content="Close" Click="CloseBtn_Click" />
        </StackPanel>
    </Grid>
    
</Window>
